#!/usr/bin/env python

import json
import subprocess
from collections import defaultdict
from typing import Any, Dict, List

from plumbum import colors
from plumbum.cmd import jq, lsblk

colors: Any = colors

c_prompt = colors.cyan & colors.bold


def gum(*args):
    r = subprocess.run(["gum", *args], stdout=subprocess.PIPE, text=True)
    return r.stdout.strip()


def pp(v: Any):
    j = json.dumps(v)
    print((jq["-r"] << j)())


disks = json.loads(
    lsblk("-d", "-J", "-o", "NAME,SERIAL,SIZE,WWN,MODEL,VENDOR,PATH,HCTL,FSTYPE")
)["blockdevices"]

valid_models = [
    "ST14000NM0001",  # Exos 2X14 14TB SAS  (4Kn only)
    "ST14000NM0081",  # Exos 2X14 14TB SAS  (512e/4Kn)
    "ST18000NM0272",  # Exos 2X18 18TB SAS  (Standard Model FastFormat 512e/4Kn)
    "ST18000NM0012",  # Exos 2X18 18TB SAS  (SED Model FastFormat 512e/4Kn)
    "ST18000NM0092",  # Exos 2X18 18TB SATA (Standard Model FastFormat 512e/4Kn)
    "ST16000NM0002",  # Exos 2X18 16TB SAS  (Standard Model FastFormat 512e/4Kn)
    "ST16000NM0012",  # Exos 2X18 16TB SAS  (SED Model FastFormat 512e/4Kn)
    "ST16000NM0092",  # Exos 2X18 16TB SATA (Standard Model FastFormat 512e/4Kn)
]

disks = [d for d in disks if d["model"] in valid_models]

if len(disks) < 1:
    print(colors.cyan | "No mach2 drives found!")
    exit(0)

drive_pairs: defaultdict[str, List[Dict[str, Any]]] = defaultdict(list)
for d in disks:
    drive_pairs[d["serial"]].append(d)

# For a given serial there should only be 2 items
for k, v in drive_pairs.items():
    assert len(v) == 2

pp(drive_pairs)

choices = {}
for sn, v in drive_pairs.items():
    d = v[0]
    vendor_model = d["vendor"]
    if d["model"]:
        vendor_model = d["vendor"] + " " + d["model"]

    warning = None
    if d["fstype"] == "LVM2_member":
        warning = (
            colors.warn
            | (colors.bold | " ## Warning:") + " Drive already part of an LVM group"
        )

    choice = f"{colors.yellow | d['path']}\t # {d['size']} {vendor_model}, SN: {d['serial']}{warning}"
    choices[choice] = sn

print(c_prompt | "Choose a drive:")
chosen: str = gum("choose", "--limit", "1", *choices.keys())

drives = drive_pairs[choices[chosen]]

pp(drives)

d1, d2 = drives

p1 = d1["path"]
p2 = d2["path"]

serial_suffix = d1["serial"][-6:]

print(c_prompt | "Run these commands to format the drive:")
print(f"sudo pvcreate {p1} {p2}")
print(f"sudo vgcreate sgt_vg_{serial_suffix} {p1} {p2}")
print(
    f"sudo lvcreate -i 2 -n sgt_lv_{serial_suffix} -l 100%FREE --type striped -I 128k sgt_vg_{serial_suffix}"
)

# vim: set ft=python:
